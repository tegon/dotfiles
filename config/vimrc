" .vimrc
set encoding=utf-8
syntax on                         " show syntax highlighting
filetype plugin indent on
set autoindent                    " set auto indent
set ts=2                          " set indent to 2 spaces
set shiftwidth=2
set expandtab                     " use spaces, not tab characters
set nocompatible                  " don't need to be compatible with old vim
set number                        " show real line number
set relativenumber                " show relative line numbers
set showmatch                     " show bracket matches
set ignorecase                    " ignore case in search
set hlsearch                      " highlight all search matches
set smartcase                     " pay attention to case when caps are used
set incsearch                     " show search results as I type
set ttimeoutlen=100               " decrease timeout for faster insert with 'O'
set ruler                         " show row and column in footer
set scrolloff=2                   " minimum lines above/below cursor
set laststatus=2                  " always show status bar
set nofoldenable                  " disable code folding
set clipboard=unnamed             " use the system clipboard
set wildmenu                      " enable bash style tab completion
set wildmode=list:longest,full
set noshowmode
" easier split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
" more natural split opening
set splitbelow
set splitright
" enable mouse integration
set mouse=a                       " enable mouse integration
set regexpengine=1                " improve performance for Ruby files https://coderwall.com/p/zxorna/ruby-files-really-slow-in-vim
" Load plugins using Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'

Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'sheerun/vim-polyglot'
Plugin 'tpope/vim-surround'
Plugin 'itchyny/lightline.vim'
Plugin 'janko-m/vim-test'
Plugin 'tpope/vim-rhubarb'
Plugin 'mhinz/vim-mix-format'
Plugin 'rizzatti/dash.vim'

call vundle#end()

" NERDTree
noremap nt :NERDTreeToggle<CR>

" ctrlp.vim
let g:ctrlp_custom_ignore = 'node_modules\|DS_Store\|git\|deps\|_build\|vendor\|tmp'

" set leader key to comma
let mapleader = ","

" Nord theme
" Plugin 'arcticicestudio/nord-vim'
"colorscheme nord
"let g:lightline = {
      "\ 'colorscheme': 'wombat',
      "\ 'component': {
      "\   'readonly': '%{&readonly?"x":""}',
      "\ },
      "\ 'separator': { 'left': '', 'right': '' },
      "\ 'subseparator': { 'left': '|', 'right': '|' }
      "\ }

" Ayu theme
" Plugin 'ayu-theme/ayu-vim'
"set termguicolors     " enable true colors support
"let ayucolor="light"
"colorscheme ayu
"let g:lightline = {
      "\ 'colorscheme': 'PaperColor',
      "\ 'component': {
      "\   'readonly': '%{&readonly?"x":""}',
      "\ },
      "\ 'separator': { 'left': '', 'right': '' },
      "\ 'subseparator': { 'left': '|', 'right': '|' }
      "\ }

" Snow theme
Plugin 'nightsense/snow'
set background=light
colorscheme snow
let g:lightline = { 'colorscheme': 'snow_light' }
set termguicolors     " enable true colors support

" test.vim
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" dirty hack for elixir files
au BufRead,BufNewFile *.ex,*.exs set filetype=elixir
au BufRead,BufNewFile *.eex,*.leex set filetype=eelixir

" mix-format config
let g:mix_format_on_save = 1

" debug abbreviations
ab rpry require 'pry'; binding.pry
ab rpryx require(IEx) && IEx.pry

" disable modelines
set modelines=0
set nomodeline

" dash.vim
nmap <silent> <leader>d <Plug>DashSearch
let g:dash_map = {
    \ 'elixir' : ['elixir', 'hex'],
    \ 'ruby' : ['ruby', 'rails', 'rubygems']
    \ }
