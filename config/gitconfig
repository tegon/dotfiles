[alias]
  st = status
  ci = commit
  co = checkout
  br = branch
  hide = update-index --assume-unchanged
  unhide = update-index --no-assume-unchanged
  dsf = "!git diff --color $@ | diff-so-fancy"
  l = log --pretty='format:%C(yellow)%h %C(blue)%ad %C(reset)%s%C(red)%d %C(green)%an%C(reset), %C(cyan)%ar' --date=short
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  pf = push --force-with-lease
  glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
  show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
  context = blame
  week = shortlog --since=last_week
  last-tag = describe --tags
  pr = !sh -c 'git log --merges --ancestry-path --oneline $1..master | tail -n 1' -
  clean-local-branches = !sh -c 'git br | grep -v master | grep -v develop | xargs git branch -D'
  clean-remote-branches = remote prune origin
[color]
  ui = true
[user]
  name = Leonardo Tegon
  email = ltegon93@gmail.com
  signingKey = 0F5436B527117B40
[includeIf "gitdir:~/src/private/"]
  path = ~/.gitconfig-work
[pull]
  rebase = true
[core]
  editor = /usr/bin/vim
  excludesfile = ~/.gitignore
[merge]
  ff = false
  tool = vimdiff
  conflictstyle = diff3
[commit]
  template = ~/.gitmessage
  gpgsign = true
  verbose = true
[rerere]
  enabled = true
[rebase]
  autosquash = true
[mergetool]
  prompt = false
[help]
  autocorrect = 1
